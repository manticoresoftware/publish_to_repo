#!/usr/bin/env bash

RED='\033[0;31m'    # For errors
GREEN='\033[0;32m'  # For success
BLUE='\033[0;34m'   # For info
NC='\033[0m'        # No Color

if [ -z "${BUILD_FOLDER+x}" ]; then
  BUILD_FOLDER="build/"
fi

if [ -z "${DIGIT_DELIMITER1+x}" ]; then
  DIGIT_DELIMITER1="."
fi

if [ -z "${DIGIT_DELIMITER2+x}" ]; then
  DIGIT_DELIMITER2="-"
fi

if [ -z "${DIGIT_FIELD1+x}" ]; then
  DIGIT_FIELD1=3
fi

if [ -z "${DIGIT_FIELD2+x}" ]; then
  DIGIT_FIELD2=1
fi

repo_generator() {
  command="/usr/bin/docker exec -i repo-generator /generator.sh $@"
  echo -e "${BLUE}$command${NC}"
  if [ "$DRY_RUN" = "false" ]; then
    eval "$command" >temp_out 2>temp_err
    exit_code=$?
    cat temp_out  # Stream stdout live
    if [[ $exit_code -ne 0 ]]; then
      echo -e "${RED}ERROR: command failed with exit code $exit_code${NC}"
      echo "Error output:"
      cat temp_err
      rm -f temp_out temp_err
      exit $exit_code
    fi
    rm -f temp_out temp_err  # Clean up without showing stderr on success
  fi
}

get_destination() {
  if [ -z "$TARGET" ]; then
    DESTINATION="dev"
    echo -e "${BLUE}DESTINATION=${DESTINATION}${NC}"
  else
    if [[ "$TARGET" == "release" ]]; then
      DESTINATION="release_candidate"
    else
      DESTINATION="$TARGET"
    fi
  fi
}

echo -e "${BLUE}Contents of ./$BUILD_FOLDER:${NC}"
find "$BUILD_FOLDER"

for f in `find "$BUILD_FOLDER" -type f \( -name "*.zip" -o -name "*.exe" \) | sort -t- -k2`; do
  packageName="$(basename "$f")"
  if [ -f "$f" ]; then
    echo -e "${BLUE}Processing $f${NC}"
    get_destination
    repo_generator --path "/repository/manticoresearch_windows/$DESTINATION/x64/" --name "$packageName" --target "$DESTINATION" --not-index --skip-signing "<$f"
  fi
done

for f in `find "$BUILD_FOLDER" -type f \( -name "*.gz" \) | sort -t- -k2`; do
  packageName="$(basename "$f")"
  if [ -f "$f" ]; then
    echo -e "${BLUE}Processing $f${NC}"
    get_destination
    repo_generator --path "/repository/manticoresearch_macos/$DESTINATION/" --name "$packageName" --target "$DESTINATION" --not-index --skip-signing "<$f"
  fi
done

echo -e "${BLUE}Cleanup${NC}"
rm -rf "$BUILD_FOLDER"*.{zip,gz,exe} || echo -e "${RED}Failed to cleanup${NC}"
echo -e "${GREEN}Cleanup completed${NC}"