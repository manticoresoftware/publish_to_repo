#!/usr/bin/env bash
# from outside: $DISTRO = 7,8

RED='\033[0;31m'    # For errors
GREEN='\033[0;32m'  # For success
BLUE='\033[0;34m'   # For info
NC='\033[0m'        # No Color

# Set indentation level from parent script (remote_script)
INDENT_LEVEL=${INDENT_LEVEL:-0}
TABS=$(printf '\t%.0s' $(seq 1 "$INDENT_LEVEL"))

if [ -z "${BUILD_FOLDER+x}" ]; then
  BUILD_FOLDER="build/"
fi

if [ -z "${FILE_MASK+x}" ]; then
  FILE_MASK="*.rpm"
fi

if [ -z "${DIGIT_DELIMITER1+x}" ]; then
  DIGIT_DELIMITER1="."
fi

if [ -z "${DIGIT_DELIMITER2+x}" ]; then
  DIGIT_DELIMITER2="_"
fi

if [ -z "${DIGIT_FIELD1+x}" ]; then
  DIGIT_FIELD1=3
fi

if [ -z "${DIGIT_FIELD2+x}" ]; then
  DIGIT_FIELD2=1
fi

echo -e "${TABS}${BLUE}Uploading $DISTRO${NC}"
echo -e "${TABS}${BLUE}Collected rpm packages${NC}"
ls "$BUILD_FOLDER" | sed "s/^/${TABS}/"

set -e

repo_generator() {
  command="/usr/bin/docker exec -i repo-generator /generator.sh $@"
  echo -e "${TABS}${BLUE}$command${NC}"
  if [ "$DRY_RUN" = "false" ]; then
    eval "$command" >temp_out 2>temp_err
    exit_code=$?
    cat temp_out | sed "s/^/${TABS}\t/"  # Indent generator.sh output one level deeper
    if [[ $exit_code -ne 0 ]]; then
      echo -e "${TABS}${RED}ERROR: command failed with exit code $exit_code${NC}"
      echo "${TABS}Error output:"
      cat temp_err | sed "s/^/${TABS}\t/"
      rm -f temp_out temp_err
      exit $exit_code
    fi
    rm -f temp_out temp_err  # Clean up without showing stderr on success
  fi
}

echo -e "${TABS}${BLUE}Contents of ./$BUILD_FOLDER:${NC}"
find "$BUILD_FOLDER" | sed "s/^/${TABS}/"

declare -A archs

echo -e "${TABS}${BLUE}Packages integrity check${NC}"
for f in `find "$BUILD_FOLDER" -type f \( -name "$FILE_MASK" \) | sort -t - -k 3n`; do
  if [ -z "$TARGET" ]; then
    DESTINATION="dev"
  else
    if [[ "$TARGET" == "release" ]]; then
      DESTINATION="release_candidate"
    else
      DESTINATION="$TARGET"
    fi
  fi

  packageName="$(basename "$f")"
  if ! repo_generator -t "$DESTINATION" -n "$packageName" -d centos --check-package "<$f"; then
    echo -e "${TABS}${RED}$packageName is corrupted. Abort uploading${NC}"
    exit 1
  fi
done

for f in `find "$BUILD_FOLDER" -type f \( -name "$FILE_MASK" \)`; do
  echo -e "${TABS}${BLUE}file $f${NC}"
  tail=$(echo "$f" | sed 's_build/__g;s/[a-z]*-//g;')
  VER=$(echo "$tail" | cut -d. -f1,2,3,4,5)
  if [[ $tail == *".x86_64."* ]]; then
    ARCH=x86_64
  elif [[ $tail == *".aarch64."* ]]; then
    ARCH=aarch64
  elif [[ $tail == *".noarch."* ]]; then
    ARCH=noarch
  fi
  echo -e "${TABS}${BLUE}Arch: $ARCH${NC}"

  if [[ $f == *icudata* ]]; then
    ARCH=noarch
  fi

  if [ -f "$f" ]; then
    echo -e "${TABS}${BLUE}Processing $f${NC}"
    packageName="$(basename "$f")"
    if [[ $ARCH == "x86_64" ]]; then
      repo_generator -n "$packageName" -d centos -v "$DISTRO" -t "$DESTINATION" -a x86_64 --not-index "<$f"
      archs[x86_64]=1
    fi

    if [[ $ARCH == "aarch64" ]]; then
      repo_generator -n "$packageName" -d centos -v "$DISTRO" -t "$DESTINATION" -a aarch64 --not-index "<$f"
      archs[aarch64]=1
    fi

    if [[ $ARCH == "noarch" ]]; then
      repo_generator -n "$packageName" -d centos -v "$DISTRO" -t "$DESTINATION" -a x86_64 --not-index "<$f"
      repo_generator -n "$packageName" -d centos -v "$DISTRO" -t "$DESTINATION" -a aarch64 --not-index "<$f"
      archs[x86_64]=1
      archs[aarch64]=1
    fi
  fi
done

echo -e "${TABS}${GREEN}Finished putting packages${NC}"

if [ -n "$MAKE_BUNDLE" ]; then
  echo -e "${TABS}${BLUE}make bundle(s) and upload them${NC}"

  if [[ ${archs[x86_64]} == 1 ]]; then
    echo -e "${TABS}${BLUE}Making bundle x86_64${NC}"
    TGZ1=manticore-${VER}.x86_64.tgz
    (cd build && tar cf - $(ls | grep -v -e debuginfo | grep "x86_64\|noarch") *icudata*rpm | gzip -9 -f) >"$TGZ1"
    repo_generator -p "/repository/manticoresearch/$DESTINATION/centos/$DISTRO/" -n "$TGZ1" --not-index --skip-signing <"$TGZ1"
  fi

  if [[ ${archs[aarch64]} == 1 ]]; then
    echo -e "${TABS}${BLUE}Making bundle aarch64${NC}"
    TGZ2=manticore-${VER}.aarch64.tgz
    (cd build && tar cf - $(ls | grep -v -e debuginfo | grep "aarch64\|noarch") *icudata*rpm | gzip -9 -f) >"$TGZ2"
    repo_generator -p "/repository/manticoresearch/$DESTINATION/centos/$DISTRO/" -n "$TGZ2" --not-index --skip-signing <"$TGZ2"
  fi
fi

echo -e "${TABS}${BLUE}Indexing${NC}"
for arch in "${!archs[@]}"; do
  repo_generator -d centos -v "$DISTRO" --architecture "$arch" --target "$DESTINATION" --only-index
done

echo -e "${TABS}${BLUE}Cleanup${NC}"
rm -rf ${BUILD_FOLDER}${FILE_MASK} || echo -e "${TABS}${RED}Failed to cleanup${NC}"
echo -e "${TABS}${GREEN}Cleanup completed${NC}"